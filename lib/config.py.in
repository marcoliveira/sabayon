#!/usr/bin/env python

#
# Copyright (C) 2005 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
import os
import os.path

PACKAGE    = "@PACKAGE_NAME@"
VERSION    = "@PACKAGE_VERSION@"
DATADIR    = "@DATADIR@"
SYSCONFDIR = "@SYSCONFDIR@"
LIBEXECDIR = "@LIBEXECDIR@"
SBINDIR    = "@SBINDIR@"

PKGDATADIR  = os.path.join (DATADIR, "sabayon")
PROFILESDIR = os.path.join (SYSCONFDIR, "desktop-profiles")

SESSION_TOOL_ARGV = [ os.path.join (LIBEXECDIR, "sabayon-session") ]
MONITOR_TOOL_ARGV = [ os.path.join (LIBEXECDIR, "sabayon-monitor") ]
APPLY_TOOL_ARGV   = [ os.path.join (SBINDIR,    "sabayon-apply") ]

# FIXME: this is too big a hammer
CLOBBER_USER_PROCESSES_ARGV = [ "/usr/bin/pkill", "-u" ]

# No. of seconds to wait after the session has started before
# running the monitor tool
ADMIN_TOOL_TIMEOUT = 3

#
# This is the user which we run the prototype sessions
# as. The account should be created as part of the packages
# post installation process
#
PROTOTYPE_USER = "sabayon"

DEFAULT_PATH  = "/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin"
DEFAULT_SHELL = "/bin/bash"
NOLOGIN_SHELL = "/sbin/nologin"
SKEL_HOMEDIR  = "/etc/skel"

XNEST_ARGV   = [ "/usr/X11R6/bin/Xnest", "-terminate", "-audit", "0", "-nolisten", "tcp" ]
SESSION_ARGV = [ "@XSESSION@", "gnome" ]
USERMOD_ARGV = [ "/usr/sbin/usermod" ]

PANEL_KEY_BASE = "/apps/panel"
# PANEL_KEY_BASE = "/apps/panel/profiles/default"

#
# When starting the prototype session, which environment
# variables should be passed through umodified
#
PASSTHROUGH_ENVIRONMENT = [
    "SABAYON_DEBUG",
    "LANG",
    "LINGUAS",
    "LC_CTYPE",
    "LC_COLLATE",
    "LC_TIME",
    "LC_NUMERIC",
    "LC_MONETARY",
    "LC_MESSAGES"
]

#
# Files a directories which we don't want to see change
# notifications for
#
FILES_TO_IGNORE = [
    ".xsession-errors",
    ".gnome/gnome-vfs/.trash_entry_cache",
    ".gnome2/share/fonts/fonts.dir",
    ".gnome2/share/cursor-fonts/fonts.dir"
]

DIRECTORIES_TO_IGNORE = [
    ".metacity/sessions",
    ".gconf",
    ".gconf.xml.defaults",
    ".gconf.xml.mandatory",
    ".gconfd",
    ".nautilus/metafiles"
]

try:
    GLADEDIR = os.environ["GLADEDIR"]
except:
    if os.path.exists ("sabayon.glade"):
        GLADEDIR ="./"
    elif os.path.exists ("admin-tool/sabayon.glade"):
        GLADEDIR = "admin-tool"
    elif os.path.exists (os.path.join (PKGDATADIR, "glade/sabayon.glade")):
        GLADEDIR = os.path.join (PKGDATADIR, "glade")
    else:
        GLADEDIR = "./"

try:
    MODULEPATH = os.environ["MODULEPATH"]
except:
    if os.path.exists ("sources"):
        MODULEPATH = "sources"
    elif os.path.exists ("lib/sources"):
        MODULEPATH = "lib/sources"
    elif os.path.exists ("../lib/sources"):
        MODULEPATH = "../lib/sources"
    elif os.path.exists (os.path.join (PKGDATADIR, "sources")):
        MODULEPATH = os.path.join (PKGDATADIR, "sources")
    else:
        MODULEPATH = "sources"
